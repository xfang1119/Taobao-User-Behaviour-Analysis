{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Taobao User Behavior Analysis\n",
    "### Course: FE-512-A Database Engineering\n",
    "### Instructor: Olorundamilola ’Dami’ Kazeem\n",
    "### Group: 12\n",
    "### Members: Yating Liu, Xing Fang\n",
    "### University: Stevens Institute of Technology\n",
    "### Semester: Spring 2019"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "outputs": [],
   "source": [
    "%load_ext sql"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Connected: root@fe512db'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%sql mysql+pymysql://root:@fe512_mysql/fe512db"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%sql USE fe512db;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": true,
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Database</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>fe512db</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>information_schema</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>mysql</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>performance_schema</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>sys</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('fe512db',),\n",
       " ('information_schema',),\n",
       " ('mysql',),\n",
       " ('performance_schema',),\n",
       " ('sys',)]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%sql SHOW DATABASES;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": false,
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>DATABASE()</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>fe512db</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('fe512db',)]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%sql SELECT DATABASE();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 1.Introduction\n",
    "Background: With the development of science and technology, the pace of life has accelerated, and online shopping has gradually entered thousands of households. The surge in user volume has brought about the emergence of online shopping platforms. At the same time, some small platforms often cannot be operated for a long time due to lack of reasonable user-oriented measures.\n",
    "\n",
    "Through the analysis of user behavior of Taobao, the largest e-commerce platform in China, we try to find practical methods and provide suggestions to help e-commerce platforms increase sales, consolidate loyal users, and ultimately achieve long-term, profitable operating models.\n",
    "\n",
    "#### Questions:\n",
    "This analysis wants to solve the following business problems by analyzing Taobao user behavior data.\n",
    "\n",
    "* ##### Flow of quantity – number of each behavior\n",
    "* ##### Conversion rate – PV/UV, CART/UV, FAV/UV, BUY/UV\n",
    "* ##### User activity analysis\n",
    "* ##### User consumption trend analysis\n",
    "* ##### Retention rate\n",
    "* ##### Repurchase number\n",
    "* ##### RMF model\n",
    "* ##### Item sales analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 2. Data\n",
    "<img src=\"logo.png\">\n",
    "\n",
    "### Source:\n",
    "The dataset is provided by Alibaba Cloud, which is a platform where businesses meet top data scientists globally to solve the toughest industry problems. Alibaba Cloud also provide lots of standard datasets for academic use, and it is the only open data sharing platform of Ali. So, we select the dataset here about Taobao, which is a large online retail and business circle in the Asia-Pacific region, which was founded by Alibaba group in May 2003.\n",
    "\n",
    "The data set contains all the behaviors (click, buy, add an item to shopping cart, favor) of about one million random users who had behaviors between November 25, 2017 and December 3, 2017. The size of data set is as follows: the number of users is about 1 million (987,994), the number of commodities is about 4.1 million (4162,024), the number of commodity categories is 9,439, and the total number of taobao user behavior records is 100 million (100,150,807).\n",
    "\n",
    "#### User Behavior Data from Taobao for Recommendation (https://tianchi.aliyun.com/dataset/dataDetail?dataId=649&userId=1)\n",
    "\n",
    "\n",
    "### Introduction:\n",
    "Our data is mainly about user purchase history(the specific time when each user bought which product) , user behavior history(the specific time when each user had specific action) and item category (which category each item belongs to). Based on these information, we want to analyze customer's shopping behavior, and provide useful business suggestions to Taobao.\n",
    "\n",
    "### Size:\n",
    "There are 100 million data records in the original data set, which is a huge amount of data. This analysis selected about 1 million records for analysis:\n",
    "* User_purchase_history: 21258 rows\n",
    "* Item_category: 1048575 rows\n",
    "* User_behavior_history: 1048575 rows\n",
    "\n",
    "### Period:\n",
    "November 25, 2017 - December 03, 2017\n",
    "\n",
    "\n",
    "### Data Dictionary\n",
    "<table>\n",
    "    <tr>\n",
    "        <th> Field Name </th>\n",
    "        <th> Data Type </th>\n",
    "        <th> Description </th>\n",
    "        <th> Example </th>\n",
    "     <tr>\n",
    "        <th> Timestamp </th>\n",
    "        <th> Integer </th>\n",
    "         <th> Timestamp of the behavior </th>\n",
    "         <th> 1761333505 </th>\n",
    "    </tr>\n",
    "    <tr>\n",
    "        <th> User ID </th>\n",
    "        <th> Integer </th>\n",
    "         <th> Serialized ID that represents a user </th>\n",
    "        <th> 310413 </th>\n",
    "         </tr>\n",
    "    <tr>\n",
    "        <th> Item ID </th>\n",
    "        <th> Integer </th>\n",
    "        <th> Serialized ID that represents an item </th>\n",
    "        <th> 1203012 </th>\n",
    "         </tr>\n",
    "    <tr>\n",
    "        <th> Category ID </th>\n",
    "        <th> Integer </th>\n",
    "        <th> Serialized ID that represents the category which the corresponding item belongs to </th>\n",
    "        <th> 4163659 </th>\n",
    "         </tr>\n",
    "    <tr>\n",
    "        <th> Behavior Type </th>\n",
    "        <th> String </th>\n",
    "        <th> Four behavior types </th>\n",
    "        <th> 'pv', 'buy', 'cart', 'fav'</th>\n",
    "          </tr>\n",
    "    <tr> \n",
    "        <th> Datentime </th>\n",
    "        <th> Timestamp </th>\n",
    "        <th> Timestamp of the behavior </th>\n",
    "        <th> 2017-11-25 00:00:00 </th>\n",
    "    </tr>\n",
    "    <tr>\n",
    "        <th> Date </th>\n",
    "        <th> CHAR </th>\n",
    "        <th> Date </th>\n",
    "        <th> 2017-12-01 </th>\n",
    "    </tr>\n",
    "    <tr>\n",
    "        <th> Times </th>\n",
    "        <th> CHAR </th>\n",
    "        <th> Time </th>\n",
    "        <th> 10:01:16 </th>\n",
    "    </table>\n",
    "\n",
    "### Samples of Data Records in Each Table\n",
    "* User Purchase History\n",
    "<table>\n",
    "    <tr>\n",
    "        <th>UserID</th>\n",
    "        <th>ItemID</th>\n",
    "        <th>Timestamp</th>\n",
    "    </tr>\n",
    "    <tr>\n",
    "        <th>739263</th>\n",
    "        <th>7385</th>\n",
    "        <th>1511705098</th>\n",
    "    </tr>\n",
    "    </table>\n",
    "    \n",
    "* User Behavior History\n",
    "<table>\n",
    "    <tr>\n",
    "        <th>UserID</th>\n",
    "        <th>Behavior_type</th>\n",
    "        <th>Timestamp</th>\n",
    "    </tr>\n",
    "    <tr>\n",
    "        <th>411686</th>\n",
    "        <th>pv</th>\n",
    "        <th>1512122476</th>\n",
    "    </tr>\n",
    "    </table>\n",
    "\n",
    "* Item Category\n",
    "<table>\n",
    "    <tr>\n",
    "        <th>ItemID</th>\n",
    "        <th>CategoryID</th>\n",
    "    </tr>\n",
    "    <tr>\n",
    "        <th>4907788</th>\n",
    "        <th>4151801</th>\n",
    "    </tr>\n",
    "    </table>\n",
    "            "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "## 3.Data Model\n",
    "<img src=\"structure.jpg\">\n",
    "\n",
    "### Design Reasons\n",
    "* Analyze the loss of users from browsing to final purchase, and propose suggestions for improving conversion rate.\n",
    "\n",
    "* Find the most active date of the user and the daily active time period during the study period to understand the user's behavior time mode.\n",
    "\n",
    "* Determine which products and product categories have the highest purchase rate, find the most popular products, and optimize product sales.\n",
    "\n",
    "* Study which users are the most important, find out the most core paid user groups, and push personalized product sales solutions based on their purchase preferences.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 4.Preprocessing\n",
    "* ### Creating tables\n",
    "* ### Changing the form of timestamp\n",
    "* ### Time outlier processing\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Creating table - User Purchase History"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "CREATE TABLE IF NOT EXISTS User_purchase_history(\n",
    "    UserID INTEGER,\n",
    "    ItemID INTEGER,\n",
    "    Timestamp INTEGER);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "21258 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "  LOAD DATA INFILE '/home/data/user_purchase_history.csv' INTO TABLE User_purchase_history\n",
    "  FIELDS        \n",
    "       TERMINATED BY ','    \n",
    "    LINES        \n",
    "       TERMINATED BY '\\n'        \n",
    "        STARTING BY ''       \n",
    "        IGNORE 1 LINES \n",
    "    (@UserID, @ItemID,@Timestamp)\n",
    "    SET\n",
    "     UserID = NULLIF(@UserID,''),\n",
    "     ItemID = NULLIF(@ItemID,''),\n",
    "     Timestamp = NULLIF(@Timestamp,'');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Creating table - Item Category"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "CREATE TABLE IF NOT EXISTS Item_category(\n",
    "    ItemID INTEGER,\n",
    "    CategoryID INTEGER);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1048575 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "  LOAD DATA INFILE '/home/data/item_category.csv' INTO TABLE Item_category\n",
    "  FIELDS        \n",
    "       TERMINATED BY ','    \n",
    "    LINES        \n",
    "       TERMINATED BY '\\n'        \n",
    "        STARTING BY ''       \n",
    "        IGNORE 1 LINES \n",
    "    (@ItemID, @CategoryID)\n",
    "    SET\n",
    "     ItemID = NULLIF(@ItemID,''),\n",
    "     CategoryID = NULLIF(@CategoryID,'');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Creating table - User Behavior History"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "CREATE TABLE IF NOT EXISTS User_behavior_history(\n",
    "    Timestamp INTEGER,\n",
    "    UserID INTEGER,\n",
    "    Behavior_type varchar(20));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1048575 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "  LOAD DATA INFILE '/home/data/user_behavior_history.csv' INTO TABLE User_behavior_history\n",
    "  FIELDS        \n",
    "       TERMINATED BY ','    \n",
    "    LINES        \n",
    "       TERMINATED BY '\\n'        \n",
    "        STARTING BY ''       \n",
    "        IGNORE 1 LINES \n",
    "    (@UserID, @Behavior_type, @Timestamp)\n",
    "    SET \n",
    "     UserID = NULLIF(@UserID,''),\n",
    "     Behavior_type = NULLIF(@Behavior_type,''),\n",
    "     Timestamp = NULLIF(@Timestamp,'');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": true,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "3 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Tables_in_fe512db</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>Item_category</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>User_behavior_history</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>User_purchase_history</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('Item_category',), ('User_behavior_history',), ('User_purchase_history',)]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SHOW TABLES;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Changing the form of timestamp - User_purchase_history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "scrolled": false,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%sql ALTER TABLE User_purchase_history ADD COLUMN datentime TIMESTAMP(0) NULL;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "21258 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql \n",
    "UPDATE User_purchase_history\n",
    "SET datentime = FROM_UNIXTIME(Timestamp);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": true,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "ALTER TABLE User_purchase_history ADD COLUMN dates CHAR(10) NULL;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "21258 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE User_purchase_history\n",
    "SET dates = SUBSTRING(datentime FROM 1 FOR 10);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "ALTER TABLE User_purchase_history ADD COLUMN times CHAR(10) NULL;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "21258 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE User_purchase_history\n",
    "SET times = SUBSTRING(datentime FROM 12 FOR 8);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>datentime</th>\n",
       "        <th>dates</th>\n",
       "        <th>times</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-26 14:04:58</td>\n",
       "        <td>2017-11-26</td>\n",
       "        <td>14:04:58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-28 23:40:22</td>\n",
       "        <td>2017-11-28</td>\n",
       "        <td>23:40:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-26 08:25:09</td>\n",
       "        <td>2017-11-26</td>\n",
       "        <td>08:25:09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-12-03 14:55:05</td>\n",
       "        <td>2017-12-03</td>\n",
       "        <td>14:55:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-27 15:08:56</td>\n",
       "        <td>2017-11-27</td>\n",
       "        <td>15:08:56</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(datetime.datetime(2017, 11, 26, 14, 4, 58), '2017-11-26', '14:04:58'),\n",
       " (datetime.datetime(2017, 11, 28, 23, 40, 22), '2017-11-28', '23:40:22'),\n",
       " (datetime.datetime(2017, 11, 26, 8, 25, 9), '2017-11-26', '08:25:09'),\n",
       " (datetime.datetime(2017, 12, 3, 14, 55, 5), '2017-12-03', '14:55:05'),\n",
       " (datetime.datetime(2017, 11, 27, 15, 8, 56), '2017-11-27', '15:08:56')]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql \n",
    "SELECT datentime, dates, times\n",
    "from User_purchase_history\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "scrolled": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "6 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Field</th>\n",
       "        <th>Type</th>\n",
       "        <th>Null</th>\n",
       "        <th>Key</th>\n",
       "        <th>Default</th>\n",
       "        <th>Extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>UserID</td>\n",
       "        <td>int(11)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>ItemID</td>\n",
       "        <td>int(11)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>Timestamp</td>\n",
       "        <td>int(11)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>datentime</td>\n",
       "        <td>timestamp</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>dates</td>\n",
       "        <td>char(10)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>times</td>\n",
       "        <td>char(10)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('UserID', 'int(11)', 'YES', '', None, ''),\n",
       " ('ItemID', 'int(11)', 'YES', '', None, ''),\n",
       " ('Timestamp', 'int(11)', 'YES', '', None, ''),\n",
       " ('datentime', 'timestamp', 'YES', '', None, ''),\n",
       " ('dates', 'char(10)', 'YES', '', None, ''),\n",
       " ('times', 'char(10)', 'YES', '', None, '')]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%sql DESCRIBE User_purchase_history;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    " ### Changing the form of timestamp - User_behavior_history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "scrolled": true,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql \n",
    "ALTER TABLE User_behavior_history ADD COLUMN datentime TIMESTAMP(0) NULL;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1048575 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE User_behavior_history\n",
    "SET datentime = FROM_UNIXTIME(Timestamp);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "ALTER TABLE User_behavior_history ADD COLUMN dates CHAR(10) NULL;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1048575 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE User_behavior_history\n",
    "SET dates = SUBSTRING(datentime FROM 1 FOR 10);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "ALTER TABLE User_behavior_history ADD COLUMN times CHAR(10)NULL;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1048575 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE User_behavior_history\n",
    "SET times = SUBSTRING(datentime FROM 12 FOR 8);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>times</th>\n",
       "        <th>dates</th>\n",
       "        <th>datentime</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10:01:16</td>\n",
       "        <td>2017-12-01</td>\n",
       "        <td>2017-12-01 10:01:16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>11:57:01</td>\n",
       "        <td>2017-12-03</td>\n",
       "        <td>2017-12-03 11:57:01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10:57:07</td>\n",
       "        <td>2017-11-27</td>\n",
       "        <td>2017-11-27 10:57:07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10:36:00</td>\n",
       "        <td>2017-12-01</td>\n",
       "        <td>2017-12-01 10:36:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>04:45:53</td>\n",
       "        <td>2017-11-28</td>\n",
       "        <td>2017-11-28 04:45:53</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('10:01:16', '2017-12-01', datetime.datetime(2017, 12, 1, 10, 1, 16)),\n",
       " ('11:57:01', '2017-12-03', datetime.datetime(2017, 12, 3, 11, 57, 1)),\n",
       " ('10:57:07', '2017-11-27', datetime.datetime(2017, 11, 27, 10, 57, 7)),\n",
       " ('10:36:00', '2017-12-01', datetime.datetime(2017, 12, 1, 10, 36)),\n",
       " ('04:45:53', '2017-11-28', datetime.datetime(2017, 11, 28, 4, 45, 53))]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT times, dates, datentime\n",
    "from User_behavior_history\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "6 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Field</th>\n",
       "        <th>Type</th>\n",
       "        <th>Null</th>\n",
       "        <th>Key</th>\n",
       "        <th>Default</th>\n",
       "        <th>Extra</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>Timestamp</td>\n",
       "        <td>int(11)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>UserID</td>\n",
       "        <td>int(11)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>Behavior_type</td>\n",
       "        <td>varchar(20)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>datentime</td>\n",
       "        <td>timestamp</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>dates</td>\n",
       "        <td>char(10)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>times</td>\n",
       "        <td>char(10)</td>\n",
       "        <td>YES</td>\n",
       "        <td></td>\n",
       "        <td>None</td>\n",
       "        <td></td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('Timestamp', 'int(11)', 'YES', '', None, ''),\n",
       " ('UserID', 'int(11)', 'YES', '', None, ''),\n",
       " ('Behavior_type', 'varchar(20)', 'YES', '', None, ''),\n",
       " ('datentime', 'timestamp', 'YES', '', None, ''),\n",
       " ('dates', 'char(10)', 'YES', '', None, ''),\n",
       " ('times', 'char(10)', 'YES', '', None, '')]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DESCRIBE User_behavior_history;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Time Outlier Processing - Only Saving Time Between November 25 to December 03, 2017"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "##### User_purchase_history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>MAX(Timestamp)</th>\n",
       "        <th>MIN(Timestamp)</th>\n",
       "        <th>MAX(datentime)</th>\n",
       "        <th>MIN(datentime)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1512316789</td>\n",
       "        <td>1511539214</td>\n",
       "        <td>2017-12-03 15:59:49</td>\n",
       "        <td>2017-11-24 16:00:14</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1512316789, 1511539214, datetime.datetime(2017, 12, 3, 15, 59, 49), datetime.datetime(2017, 11, 24, 16, 0, 14))]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT MAX(Timestamp),\n",
    "       MIN(Timestamp),\n",
    "       MAX(datentime),\n",
    "       MIN(datentime)\n",
    "FROM User_purchase_history;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "179 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DELETE FROM User_purchase_history\n",
    "WHERE datentime < '2017-11-25 00:00:00'\n",
    "OR datentime > '2017-12-04 00:00:00';"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>MAX(Timestamp)</th>\n",
       "        <th>MIN(Timestamp)</th>\n",
       "        <th>MAX(datentime)</th>\n",
       "        <th>MIN(datentime)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1512316789</td>\n",
       "        <td>1511568132</td>\n",
       "        <td>2017-12-03 15:59:49</td>\n",
       "        <td>2017-11-25 00:02:12</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1512316789, 1511568132, datetime.datetime(2017, 12, 3, 15, 59, 49), datetime.datetime(2017, 11, 25, 0, 2, 12))]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT MAX(Timestamp),\n",
    "       MIN(Timestamp),\n",
    "       MAX(datentime),\n",
    "       MIN(datentime)\n",
    "FROM User_purchase_history;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "##### User_behavior_history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>MAX(Timestamp)</th>\n",
       "        <th>MIN(Timestamp)</th>\n",
       "        <th>MAX(datentime)</th>\n",
       "        <th>MIN(datentime)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1761333505</td>\n",
       "        <td>-1553400454</td>\n",
       "        <td>2025-10-24 19:18:25</td>\n",
       "        <td>1970-01-01 10:34:57</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1761333505, -1553400454, datetime.datetime(2025, 10, 24, 19, 18, 25), datetime.datetime(1970, 1, 1, 10, 34, 57))]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT MAX(Timestamp),\n",
    "       MIN(Timestamp),\n",
    "       MAX(datentime),\n",
    "       MIN(datentime)\n",
    "FROM User_behavior_history;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "13049 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "DELETE FROM User_behavior_history\n",
    "WHERE datentime < '2017-11-25 00:00:00'\n",
    "OR datentime > '2017-12-04 00:00:00';"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>MAX(Timestamp)</th>\n",
       "        <th>MIN(Timestamp)</th>\n",
       "        <th>MAX(datentime)</th>\n",
       "        <th>MIN(datentime)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1512321645</td>\n",
       "        <td>-1553400454</td>\n",
       "        <td>2017-12-03 17:20:45</td>\n",
       "        <td>2017-11-25 00:00:00</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1512321645, -1553400454, datetime.datetime(2017, 12, 3, 17, 20, 45), datetime.datetime(2017, 11, 25, 0, 0))]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT MAX(Timestamp),\n",
    "       MIN(Timestamp),\n",
    "       MAX(datentime),\n",
    "       MIN(datentime)\n",
    "FROM User_behavior_history;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. Questions & Answers"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 5.1 Flow - Quantity - Number of Each Behavior\n",
    "\n",
    "#### how many users have each behavior"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "4 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Behavior_type</th>\n",
       "        <th>Number</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>buy</td>\n",
       "        <td>20491</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>cart</td>\n",
       "        <td>53185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>fav</td>\n",
       "        <td>26785</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>pv</td>\n",
       "        <td>501298</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('buy', 20491), ('cart', 53185), ('fav', 26785), ('pv', 501298)]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT Behavior_type,\n",
    "       COUNT(DISTINCT UserID) AS Number\n",
    "FROM User_behavior_history\n",
    "GROUP BY Behavior_type;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "<img src=\"flow-quantity.png\">\n",
    "\n",
    "* ##### Page viewing takes the most part of user behavior."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 5.2. Conversion Rate\n",
    "* PV/UV\n",
    "* CART/UV\n",
    "* FAV/UV\n",
    "* BUY/UV"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Conversion Rate - Bounce Rate:PV/UV\n",
    "* ##### Percentage of people who just view but dont't favorite, cart or buy."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Number of people who just viewed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>COUNT(DISTINCT UserID)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>439601</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(439601,)]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT COUNT(DISTINCT UserID)\n",
    "FROM User_behavior_history\n",
    "WHERE UserID NOT IN(SELECT DISTINCT UserID FROM User_behavior_history WHERE Behavior_type = 'buy')\n",
    "AND UserID NOT IN(SELECT DISTINCT UserID FROM User_behavior_history WHERE Behavior_type = 'cart')\n",
    "AND UserID NOT IN(SELECT DISTINCT UserID FROM User_behavior_history WHERE Behavior_type = 'fav');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### PV/UV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>Bounce Rate</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>0.8194</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(Decimal('0.8194'),)]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT(SELECT COUNT(DISTINCT UserID)\n",
    "FROM User_behavior_history\n",
    "WHERE UserID NOT IN(SELECT DISTINCT UserID FROM User_behavior_history WHERE Behavior_type = 'buy')\n",
    "AND UserID NOT IN(SELECT DISTINCT UserID FROM User_behavior_history WHERE Behavior_type = 'cart')\n",
    "AND UserID NOT IN(SELECT DISTINCT UserID FROM User_behavior_history WHERE Behavior_type = 'fav'))/(SELECT COUNT(DISTINCT UserID) AS 'UV'\n",
    "FROM User_behavior_history) AS 'Bounce Rate';"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Conversion Rate - CART/UV\n",
    "* ##### Percentage of people who put items in cart but don't buy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>CART/UV</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>0.0962</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(Decimal('0.0962'),)]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT(SELECT COUNT(DISTINCT UserID)\n",
    "FROM User_behavior_history\n",
    "WHERE Behavior_type = 'cart'\n",
    "AND UserID NOT IN(SELECT DISTINCT UserID FROM User_behavior_history WHERE Behavior_type = 'buy'))\n",
    "/(SELECT COUNT(DISTINCT UserID) AS 'UV'\n",
    "FROM User_behavior_history) AS 'CART/UV';"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Conversion Rate - FAV/UV\n",
    "* ##### Percentage of people who take the action of \"favorite\" but don't buy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>FAV/UV</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>0.0487</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(Decimal('0.0487'),)]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT(SELECT COUNT(DISTINCT UserID)\n",
    "FROM User_behavior_history\n",
    "WHERE Behavior_type = 'fav'\n",
    "AND UserID NOT IN(SELECT DISTINCT UserID FROM User_behavior_history WHERE Behavior_type = 'buy'))\n",
    "/(SELECT COUNT(DISTINCT UserID) AS 'UV'\n",
    "FROM User_behavior_history) AS 'FAV/UV';"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Conversion Rate - BUY/UV\n",
    "* ##### Percentage of people who finally buy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>BUY/UV</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>0.0382</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(Decimal('0.0382'),)]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT(SELECT COUNT(DISTINCT UserID)\n",
    "FROM User_behavior_history\n",
    "WHERE Behavior_type = 'buy')\n",
    "/(SELECT COUNT(DISTINCT UserID) AS 'UV'\n",
    "FROM User_behavior_history) AS 'BUY/UV';"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "<img src=\"conversion_rate.png\">\n",
    "\n",
    "* ##### 82%of all users just view pages but have no other actions.\n",
    "* ##### Compared with \"favorite\", people more like to take items into cart.\n",
    "* ##### Only 3% of users will finally buy."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 5.3. User Activity Analysis\n",
    "* UAA-hour\n",
    "* UAA-day"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### UAA-hour\n",
    "\n",
    "The sum number of each behavior during each hour"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Add column hour to table User_behavior_history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "ALTER TABLE User_behavior_history ADD COLUMN hour CHAR(10) NULL;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "1035526 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE User_behavior_history\n",
    "SET hour = SUBSTRING(datentime FROM 12 FOR 2);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "25 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>hour</th>\n",
       "        <th>Num_PV</th>\n",
       "        <th>Num_FAV</th>\n",
       "        <th>Num_CART</th>\n",
       "        <th>Num_BUY</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>1</td>\n",
       "        <td>0</td>\n",
       "        <td>0</td>\n",
       "        <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>00</td>\n",
       "        <td>31942</td>\n",
       "        <td>1093</td>\n",
       "        <td>2077</td>\n",
       "        <td>698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>01</td>\n",
       "        <td>38806</td>\n",
       "        <td>1395</td>\n",
       "        <td>2439</td>\n",
       "        <td>1044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>02</td>\n",
       "        <td>44938</td>\n",
       "        <td>1516</td>\n",
       "        <td>2829</td>\n",
       "        <td>1295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>03</td>\n",
       "        <td>44336</td>\n",
       "        <td>1507</td>\n",
       "        <td>2786</td>\n",
       "        <td>1308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>04</td>\n",
       "        <td>44279</td>\n",
       "        <td>1491</td>\n",
       "        <td>2786</td>\n",
       "        <td>1206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>05</td>\n",
       "        <td>48613</td>\n",
       "        <td>1541</td>\n",
       "        <td>2840</td>\n",
       "        <td>1295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>06</td>\n",
       "        <td>48457</td>\n",
       "        <td>1598</td>\n",
       "        <td>2880</td>\n",
       "        <td>1288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>07</td>\n",
       "        <td>50249</td>\n",
       "        <td>1541</td>\n",
       "        <td>2952</td>\n",
       "        <td>1368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>08</td>\n",
       "        <td>48181</td>\n",
       "        <td>1562</td>\n",
       "        <td>2962</td>\n",
       "        <td>1205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>09</td>\n",
       "        <td>43975</td>\n",
       "        <td>1462</td>\n",
       "        <td>2632</td>\n",
       "        <td>1057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>45149</td>\n",
       "        <td>1357</td>\n",
       "        <td>2544</td>\n",
       "        <td>976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>11</td>\n",
       "        <td>57068</td>\n",
       "        <td>1729</td>\n",
       "        <td>3370</td>\n",
       "        <td>1244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>12</td>\n",
       "        <td>69139</td>\n",
       "        <td>1948</td>\n",
       "        <td>4035</td>\n",
       "        <td>1421</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>13</td>\n",
       "        <td>78971</td>\n",
       "        <td>2369</td>\n",
       "        <td>4863</td>\n",
       "        <td>1503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14</td>\n",
       "        <td>78141</td>\n",
       "        <td>2493</td>\n",
       "        <td>5161</td>\n",
       "        <td>1492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>15</td>\n",
       "        <td>58318</td>\n",
       "        <td>2039</td>\n",
       "        <td>4231</td>\n",
       "        <td>1018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16</td>\n",
       "        <td>28835</td>\n",
       "        <td>962</td>\n",
       "        <td>1764</td>\n",
       "        <td>597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>13431</td>\n",
       "        <td>469</td>\n",
       "        <td>810</td>\n",
       "        <td>228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>7312</td>\n",
       "        <td>256</td>\n",
       "        <td>438</td>\n",
       "        <td>106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>4988</td>\n",
       "        <td>169</td>\n",
       "        <td>293</td>\n",
       "        <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>20</td>\n",
       "        <td>4212</td>\n",
       "        <td>141</td>\n",
       "        <td>270</td>\n",
       "        <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>5547</td>\n",
       "        <td>188</td>\n",
       "        <td>355</td>\n",
       "        <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>22</td>\n",
       "        <td>11493</td>\n",
       "        <td>372</td>\n",
       "        <td>777</td>\n",
       "        <td>171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>23</td>\n",
       "        <td>20717</td>\n",
       "        <td>668</td>\n",
       "        <td>1389</td>\n",
       "        <td>370</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(None, Decimal('1'), Decimal('0'), Decimal('0'), Decimal('0')),\n",
       " ('00', Decimal('31942'), Decimal('1093'), Decimal('2077'), Decimal('698')),\n",
       " ('01', Decimal('38806'), Decimal('1395'), Decimal('2439'), Decimal('1044')),\n",
       " ('02', Decimal('44938'), Decimal('1516'), Decimal('2829'), Decimal('1295')),\n",
       " ('03', Decimal('44336'), Decimal('1507'), Decimal('2786'), Decimal('1308')),\n",
       " ('04', Decimal('44279'), Decimal('1491'), Decimal('2786'), Decimal('1206')),\n",
       " ('05', Decimal('48613'), Decimal('1541'), Decimal('2840'), Decimal('1295')),\n",
       " ('06', Decimal('48457'), Decimal('1598'), Decimal('2880'), Decimal('1288')),\n",
       " ('07', Decimal('50249'), Decimal('1541'), Decimal('2952'), Decimal('1368')),\n",
       " ('08', Decimal('48181'), Decimal('1562'), Decimal('2962'), Decimal('1205')),\n",
       " ('09', Decimal('43975'), Decimal('1462'), Decimal('2632'), Decimal('1057')),\n",
       " ('10', Decimal('45149'), Decimal('1357'), Decimal('2544'), Decimal('976')),\n",
       " ('11', Decimal('57068'), Decimal('1729'), Decimal('3370'), Decimal('1244')),\n",
       " ('12', Decimal('69139'), Decimal('1948'), Decimal('4035'), Decimal('1421')),\n",
       " ('13', Decimal('78971'), Decimal('2369'), Decimal('4863'), Decimal('1503')),\n",
       " ('14', Decimal('78141'), Decimal('2493'), Decimal('5161'), Decimal('1492')),\n",
       " ('15', Decimal('58318'), Decimal('2039'), Decimal('4231'), Decimal('1018')),\n",
       " ('16', Decimal('28835'), Decimal('962'), Decimal('1764'), Decimal('597')),\n",
       " ('17', Decimal('13431'), Decimal('469'), Decimal('810'), Decimal('228')),\n",
       " ('18', Decimal('7312'), Decimal('256'), Decimal('438'), Decimal('106')),\n",
       " ('19', Decimal('4988'), Decimal('169'), Decimal('293'), Decimal('71')),\n",
       " ('20', Decimal('4212'), Decimal('141'), Decimal('270'), Decimal('54')),\n",
       " ('21', Decimal('5547'), Decimal('188'), Decimal('355'), Decimal('64')),\n",
       " ('22', Decimal('11493'), Decimal('372'), Decimal('777'), Decimal('171')),\n",
       " ('23', Decimal('20717'), Decimal('668'), Decimal('1389'), Decimal('370'))]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT hour,\n",
    "SUM(CASE WHEN Behavior_type='pv' THEN 1 ELSE 0 END) AS 'Num_PV',\n",
    "SUM(CASE WHEN Behavior_type='fav' THEN 1 ELSE 0 END) AS 'Num_FAV',\n",
    "SUM(CASE WHEN Behavior_type='cart' THEN 1 ELSE 0 END) AS 'Num_CART',\n",
    "SUM(CASE WHEN Behavior_type='buy' THEN 1 ELSE 0 END) AS 'Num_BUY'\n",
    "FROM User_behavior_history\n",
    "GROUP BY hour\n",
    "ORDER BY hour;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "<img src=\"uaa-hour.png\">\n",
    "\n",
    "* ##### During the period from 12 to 15, it is the active peak period for users.\n",
    "* ##### 8：00 pm is the least active time for users. However after 8pm, it is gradually getting active again."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### UAA-day\n",
    "The sum number of each behavior during each day"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>dates</th>\n",
       "        <th>Num_PV</th>\n",
       "        <th>Num_FAV</th>\n",
       "        <th>Num_CART</th>\n",
       "        <th>Num_BUY</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>None</td>\n",
       "        <td>1</td>\n",
       "        <td>0</td>\n",
       "        <td>0</td>\n",
       "        <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-25</td>\n",
       "        <td>98971</td>\n",
       "        <td>3211</td>\n",
       "        <td>5873</td>\n",
       "        <td>2153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-26</td>\n",
       "        <td>99593</td>\n",
       "        <td>3054</td>\n",
       "        <td>6145</td>\n",
       "        <td>2264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-27</td>\n",
       "        <td>93793</td>\n",
       "        <td>3011</td>\n",
       "        <td>5721</td>\n",
       "        <td>2302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-28</td>\n",
       "        <td>92457</td>\n",
       "        <td>3060</td>\n",
       "        <td>5591</td>\n",
       "        <td>2165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-29</td>\n",
       "        <td>96684</td>\n",
       "        <td>3279</td>\n",
       "        <td>5941</td>\n",
       "        <td>2306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-30</td>\n",
       "        <td>98262</td>\n",
       "        <td>3161</td>\n",
       "        <td>6059</td>\n",
       "        <td>2318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-12-01</td>\n",
       "        <td>104507</td>\n",
       "        <td>3282</td>\n",
       "        <td>6694</td>\n",
       "        <td>2213</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-12-02</td>\n",
       "        <td>130353</td>\n",
       "        <td>4187</td>\n",
       "        <td>8389</td>\n",
       "        <td>2820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-12-03</td>\n",
       "        <td>112477</td>\n",
       "        <td>3621</td>\n",
       "        <td>7070</td>\n",
       "        <td>2538</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(None, Decimal('1'), Decimal('0'), Decimal('0'), Decimal('0')),\n",
       " ('2017-11-25', Decimal('98971'), Decimal('3211'), Decimal('5873'), Decimal('2153')),\n",
       " ('2017-11-26', Decimal('99593'), Decimal('3054'), Decimal('6145'), Decimal('2264')),\n",
       " ('2017-11-27', Decimal('93793'), Decimal('3011'), Decimal('5721'), Decimal('2302')),\n",
       " ('2017-11-28', Decimal('92457'), Decimal('3060'), Decimal('5591'), Decimal('2165')),\n",
       " ('2017-11-29', Decimal('96684'), Decimal('3279'), Decimal('5941'), Decimal('2306')),\n",
       " ('2017-11-30', Decimal('98262'), Decimal('3161'), Decimal('6059'), Decimal('2318')),\n",
       " ('2017-12-01', Decimal('104507'), Decimal('3282'), Decimal('6694'), Decimal('2213')),\n",
       " ('2017-12-02', Decimal('130353'), Decimal('4187'), Decimal('8389'), Decimal('2820')),\n",
       " ('2017-12-03', Decimal('112477'), Decimal('3621'), Decimal('7070'), Decimal('2538'))]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT dates,\n",
    "SUM(CASE WHEN Behavior_type='pv' THEN 1 ELSE 0 END) AS 'Num_PV',\n",
    "SUM(CASE WHEN Behavior_type='fav' THEN 1 ELSE 0 END) AS 'Num_FAV',\n",
    "SUM(CASE WHEN Behavior_type='cart' THEN 1 ELSE 0 END) AS 'Num_CART',\n",
    "SUM(CASE WHEN Behavior_type='buy' THEN 1 ELSE 0 END) AS 'Num_BUY'\n",
    "FROM User_behavior_history\n",
    "GROUP BY dates\n",
    "ORDER BY dates ASC;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "<img src=\"uaa-day.png\">\n",
    "\n",
    "* ##### The sudden increase in 12/2 and 12/3 may be related to DOUBLE 12 which is similar to Black Friday in US; also the two days are weekends so the increase may have a connection with weekends."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 5.4.User Consumption Trend Analysis(Based on Hour)\n",
    "* Number of Users\n",
    "* Number of Orders\n",
    "* Number of Products\n",
    "* Regression Model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Add column hour to table User_purchase_history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "0 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "ALTER TABLE User_purchase_history ADD COLUMN hour CHAR(10) NULL;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "21079 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "UPDATE User_purchase_history\n",
    "SET hour = SUBSTRING(datentime FROM 12 FOR 2);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Number of Users\n",
    "* ##### During each hour, how many people purchased on Taoba."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "scrolled": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "24 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>hour</th>\n",
       "        <th>COUNT(DISTINCT UserID)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>00</td>\n",
       "        <td>693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>01</td>\n",
       "        <td>1029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>02</td>\n",
       "        <td>1288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>03</td>\n",
       "        <td>1295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>04</td>\n",
       "        <td>1198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>05</td>\n",
       "        <td>1285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>06</td>\n",
       "        <td>1273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>07</td>\n",
       "        <td>1353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>08</td>\n",
       "        <td>1192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>09</td>\n",
       "        <td>1044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>11</td>\n",
       "        <td>1230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>12</td>\n",
       "        <td>1411</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>13</td>\n",
       "        <td>1489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14</td>\n",
       "        <td>1474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>15</td>\n",
       "        <td>1005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16</td>\n",
       "        <td>589</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>20</td>\n",
       "        <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>22</td>\n",
       "        <td>168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>23</td>\n",
       "        <td>368</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('00', 693),\n",
       " ('01', 1029),\n",
       " ('02', 1288),\n",
       " ('03', 1295),\n",
       " ('04', 1198),\n",
       " ('05', 1285),\n",
       " ('06', 1273),\n",
       " ('07', 1353),\n",
       " ('08', 1192),\n",
       " ('09', 1044),\n",
       " ('10', 972),\n",
       " ('11', 1230),\n",
       " ('12', 1411),\n",
       " ('13', 1489),\n",
       " ('14', 1474),\n",
       " ('15', 1005),\n",
       " ('16', 589),\n",
       " ('17', 227),\n",
       " ('18', 106),\n",
       " ('19', 71),\n",
       " ('20', 54),\n",
       " ('21', 64),\n",
       " ('22', 168),\n",
       " ('23', 368)]"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT hour,COUNT(DISTINCT UserID)\n",
    "FROM User_purchase_history\n",
    "GROUP BY hour\n",
    "ORDER BY hour;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "<img src=\"number_of_users.png\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Number of Orders\n",
    "* ##### During each hour, how many orders are generated on Taobao. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "24 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>hour</th>\n",
       "        <th>count(UserID)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>00</td>\n",
       "        <td>698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>01</td>\n",
       "        <td>1044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>02</td>\n",
       "        <td>1295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>03</td>\n",
       "        <td>1308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>04</td>\n",
       "        <td>1206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>05</td>\n",
       "        <td>1295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>06</td>\n",
       "        <td>1288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>07</td>\n",
       "        <td>1368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>08</td>\n",
       "        <td>1205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>09</td>\n",
       "        <td>1057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>11</td>\n",
       "        <td>1244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>12</td>\n",
       "        <td>1421</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>13</td>\n",
       "        <td>1503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14</td>\n",
       "        <td>1492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>15</td>\n",
       "        <td>1018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16</td>\n",
       "        <td>597</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>20</td>\n",
       "        <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>22</td>\n",
       "        <td>171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>23</td>\n",
       "        <td>370</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('00', 698),\n",
       " ('01', 1044),\n",
       " ('02', 1295),\n",
       " ('03', 1308),\n",
       " ('04', 1206),\n",
       " ('05', 1295),\n",
       " ('06', 1288),\n",
       " ('07', 1368),\n",
       " ('08', 1205),\n",
       " ('09', 1057),\n",
       " ('10', 976),\n",
       " ('11', 1244),\n",
       " ('12', 1421),\n",
       " ('13', 1503),\n",
       " ('14', 1492),\n",
       " ('15', 1018),\n",
       " ('16', 597),\n",
       " ('17', 228),\n",
       " ('18', 106),\n",
       " ('19', 71),\n",
       " ('20', 54),\n",
       " ('21', 64),\n",
       " ('22', 171),\n",
       " ('23', 370)]"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT hour, count(UserID)\n",
    "FROM User_purchase_history\n",
    "GROUP BY hour\n",
    "ORDER BY hour;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "<img src=\"number_of_orders.png\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Number of Products\n",
    "* ##### During each hour, how many products are sold."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "24 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>hour</th>\n",
       "        <th>COUNT(DISTINCT ItemID)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>00</td>\n",
       "        <td>694</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>01</td>\n",
       "        <td>1029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>02</td>\n",
       "        <td>1275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>03</td>\n",
       "        <td>1282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>04</td>\n",
       "        <td>1189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>05</td>\n",
       "        <td>1273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>06</td>\n",
       "        <td>1275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>07</td>\n",
       "        <td>1345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>08</td>\n",
       "        <td>1185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>09</td>\n",
       "        <td>1043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>10</td>\n",
       "        <td>967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>11</td>\n",
       "        <td>1227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>12</td>\n",
       "        <td>1399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>13</td>\n",
       "        <td>1476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>14</td>\n",
       "        <td>1464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>15</td>\n",
       "        <td>1006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>16</td>\n",
       "        <td>581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>17</td>\n",
       "        <td>223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>18</td>\n",
       "        <td>106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>19</td>\n",
       "        <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>20</td>\n",
       "        <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>21</td>\n",
       "        <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>22</td>\n",
       "        <td>168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>23</td>\n",
       "        <td>369</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('00', 694),\n",
       " ('01', 1029),\n",
       " ('02', 1275),\n",
       " ('03', 1282),\n",
       " ('04', 1189),\n",
       " ('05', 1273),\n",
       " ('06', 1275),\n",
       " ('07', 1345),\n",
       " ('08', 1185),\n",
       " ('09', 1043),\n",
       " ('10', 967),\n",
       " ('11', 1227),\n",
       " ('12', 1399),\n",
       " ('13', 1476),\n",
       " ('14', 1464),\n",
       " ('15', 1006),\n",
       " ('16', 581),\n",
       " ('17', 223),\n",
       " ('18', 106),\n",
       " ('19', 71),\n",
       " ('20', 54),\n",
       " ('21', 64),\n",
       " ('22', 168),\n",
       " ('23', 369)]"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT hour,COUNT(DISTINCT ItemID)\n",
    "FROM User_purchase_history\n",
    "GROUP BY hour\n",
    "ORDER BY hour;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "<img src=\"number_of_products.png\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Regression Models\n",
    "* ##### To further test the relationship among 3 indicators，we used linear regression models between any 2 of them."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "<img src=\"correlation.png\">\n",
    "\n",
    "* ##### From the output of 3 regression models, any two indicators are positively correlated. we can conclude that the more users there are, the more orders there are, and the more types of goods are sold."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 5.5.Retention Rate\n",
    "* ##### Wiki：Retention rate is the ratio of the number of retained customers to the number at risk\n",
    "* ##### In our project, we calculated the ratio of people who still have any actions on Taobao after the first day they logged in."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### First step: Select UserID, dates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>UserID</th>\n",
       "        <th>dates</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>411686</td>\n",
       "        <td>2017-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>322567</td>\n",
       "        <td>2017-12-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>211779</td>\n",
       "        <td>2017-11-27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>421743</td>\n",
       "        <td>2017-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>689964</td>\n",
       "        <td>2017-11-28</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(411686, '2017-12-01'),\n",
       " (322567, '2017-12-03'),\n",
       " (211779, '2017-11-27'),\n",
       " (421743, '2017-12-01'),\n",
       " (689964, '2017-11-28')]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT UserID,dates\n",
    "FROM User_behavior_history\n",
    "GROUP BY 1,2\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Second step: Calculate the first day of each user\n",
    "* ##### first_day: The day users had the first action during the period of our raw data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>UserID</th>\n",
       "        <th>dates</th>\n",
       "        <th>first_day</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>2017-11-29</td>\n",
       "        <td>2017-11-29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>2017-12-02</td>\n",
       "        <td>2017-11-29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>2017-12-01</td>\n",
       "        <td>2017-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>2017-11-28</td>\n",
       "        <td>2017-11-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>2017-12-03</td>\n",
       "        <td>2017-11-28</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, '2017-11-29', '2017-11-29'),\n",
       " (1, '2017-12-02', '2017-11-29'),\n",
       " (3, '2017-12-01', '2017-12-01'),\n",
       " (4, '2017-11-28', '2017-11-28'),\n",
       " (4, '2017-12-03', '2017-11-28')]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT b.UserID, b.dates,c.first_day\n",
    "FROM\n",
    "    (SELECT UserID,dates\n",
    "      FROM User_behavior_history\n",
    "      GROUP BY 1,2) b\n",
    "LEFT JOIN\n",
    "    (SELECT UserID,min(dates) first_day\n",
    "      FROM\n",
    "          (SELECT UserID,dates\n",
    "            FROM User_behavior_history\n",
    "            GROUP BY 1,2) a\n",
    "      GROUP BY 1) c\n",
    "ON b.UserID = c.UserID\n",
    "ORDER BY 1,2\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Third step: Calculate the time difference between every login time and first time for each user"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "5 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>UserID</th>\n",
       "        <th>dates</th>\n",
       "        <th>first_day</th>\n",
       "        <th>by_day</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>2017-11-29</td>\n",
       "        <td>2017-11-29</td>\n",
       "        <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>2017-12-02</td>\n",
       "        <td>2017-11-29</td>\n",
       "        <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>2017-12-01</td>\n",
       "        <td>2017-12-01</td>\n",
       "        <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>2017-11-28</td>\n",
       "        <td>2017-11-28</td>\n",
       "        <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>2017-12-03</td>\n",
       "        <td>2017-11-28</td>\n",
       "        <td>5</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, '2017-11-29', '2017-11-29', 0),\n",
       " (1, '2017-12-02', '2017-11-29', 3),\n",
       " (3, '2017-12-01', '2017-12-01', 0),\n",
       " (4, '2017-11-28', '2017-11-28', 0),\n",
       " (4, '2017-12-03', '2017-11-28', 5)]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT UserID,dates,first_day,DATEDIFF(dates,first_day) AS by_day\n",
    "FROM\n",
    "    (SELECT b.UserID, b.dates,c.first_day\n",
    "FROM\n",
    "    (SELECT UserID,dates\n",
    "      FROM User_behavior_history\n",
    "      GROUP BY 1,2) b\n",
    "LEFT JOIN\n",
    "    (SELECT UserID,min(dates) first_day\n",
    "      FROM\n",
    "          (SELECT UserID,dates\n",
    "            FROM User_behavior_history\n",
    "            GROUP BY 1,2) a\n",
    "      GROUP BY 1) c\n",
    "ON b.UserID = c.UserID\n",
    "ORDER BY 1,2) e\n",
    "ORDER BY 1,2\n",
    "LIMIT 5;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Fourth step: Calculate 1st-7th day retention rate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "scrolled": true,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "9 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>first_day</th>\n",
       "        <th>day_1</th>\n",
       "        <th>day_2</th>\n",
       "        <th>day_3</th>\n",
       "        <th>day_4</th>\n",
       "        <th>day_5</th>\n",
       "        <th>day_6</th>\n",
       "        <th>day_7</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-25</td>\n",
       "        <td>0.1604</td>\n",
       "        <td>0.1373</td>\n",
       "        <td>0.1289</td>\n",
       "        <td>0.1309</td>\n",
       "        <td>0.1290</td>\n",
       "        <td>0.1355</td>\n",
       "        <td>0.1617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-26</td>\n",
       "        <td>0.1425</td>\n",
       "        <td>0.1293</td>\n",
       "        <td>0.1290</td>\n",
       "        <td>0.1253</td>\n",
       "        <td>0.1293</td>\n",
       "        <td>0.1559</td>\n",
       "        <td>0.1374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-27</td>\n",
       "        <td>0.1395</td>\n",
       "        <td>0.1343</td>\n",
       "        <td>0.1297</td>\n",
       "        <td>0.1275</td>\n",
       "        <td>0.1479</td>\n",
       "        <td>0.1294</td>\n",
       "        <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-28</td>\n",
       "        <td>0.1384</td>\n",
       "        <td>0.1290</td>\n",
       "        <td>0.1264</td>\n",
       "        <td>0.1456</td>\n",
       "        <td>0.1287</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-29</td>\n",
       "        <td>0.1334</td>\n",
       "        <td>0.1277</td>\n",
       "        <td>0.1469</td>\n",
       "        <td>0.1268</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-11-30</td>\n",
       "        <td>0.1316</td>\n",
       "        <td>0.1449</td>\n",
       "        <td>0.1234</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-12-01</td>\n",
       "        <td>0.1490</td>\n",
       "        <td>0.1253</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-12-02</td>\n",
       "        <td>0.1219</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2017-12-03</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "        <td>0.0000</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[('2017-11-25', Decimal('0.1604'), Decimal('0.1373'), Decimal('0.1289'), Decimal('0.1309'), Decimal('0.1290'), Decimal('0.1355'), Decimal('0.1617')),\n",
       " ('2017-11-26', Decimal('0.1425'), Decimal('0.1293'), Decimal('0.1290'), Decimal('0.1253'), Decimal('0.1293'), Decimal('0.1559'), Decimal('0.1374')),\n",
       " ('2017-11-27', Decimal('0.1395'), Decimal('0.1343'), Decimal('0.1297'), Decimal('0.1275'), Decimal('0.1479'), Decimal('0.1294'), Decimal('0.0000')),\n",
       " ('2017-11-28', Decimal('0.1384'), Decimal('0.1290'), Decimal('0.1264'), Decimal('0.1456'), Decimal('0.1287'), Decimal('0.0000'), Decimal('0.0000')),\n",
       " ('2017-11-29', Decimal('0.1334'), Decimal('0.1277'), Decimal('0.1469'), Decimal('0.1268'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000')),\n",
       " ('2017-11-30', Decimal('0.1316'), Decimal('0.1449'), Decimal('0.1234'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000')),\n",
       " ('2017-12-01', Decimal('0.1490'), Decimal('0.1253'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000')),\n",
       " ('2017-12-02', Decimal('0.1219'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000')),\n",
       " ('2017-12-03', Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'), Decimal('0.0000'))]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT first_day,\n",
    "       SUM(CASE WHEN by_day=1 THEN 1 ELSE 0 END)/SUM(CASE WHEN by_day=0 THEN 1 ELSE 0 END) day_1,\n",
    "       SUM(CASE WHEN by_day=2 THEN 1 ELSE 0 END)/SUM(CASE WHEN by_day=0 THEN 1 ELSE 0 END) day_2,\n",
    "       SUM(CASE WHEN by_day=3 THEN 1 ELSE 0 END)/SUM(CASE WHEN by_day=0 THEN 1 ELSE 0 END) day_3,\n",
    "       SUM(CASE WHEN by_day=4 THEN 1 ELSE 0 END)/SUM(CASE WHEN by_day=0 THEN 1 ELSE 0 END) day_4,\n",
    "       SUM(CASE WHEN by_day=5 THEN 1 ELSE 0 END)/SUM(CASE WHEN by_day=0 THEN 1 ELSE 0 END) day_5,\n",
    "       SUM(CASE WHEN by_day=6 THEN 1 ELSE 0 END)/SUM(CASE WHEN by_day=0 THEN 1 ELSE 0 END) day_6,\n",
    "       SUM(CASE WHEN by_day=7 THEN 1 ELSE 0 END)/SUM(CASE WHEN by_day=0 THEN 1 ELSE 0 END) day_7\n",
    "FROM\n",
    "    (SELECT UserID,dates,first_day,DATEDIFF(dates,first_day) AS by_day\n",
    "FROM\n",
    "    (SELECT b.UserID, b.dates,c.first_day\n",
    "FROM\n",
    "    (SELECT UserID,dates\n",
    "      FROM User_behavior_history\n",
    "      GROUP BY 1,2) b\n",
    "LEFT JOIN\n",
    "    (SELECT UserID,min(dates) first_day\n",
    "      FROM\n",
    "          (SELECT UserID,dates\n",
    "            FROM User_behavior_history\n",
    "            GROUP BY 1,2) a\n",
    "      GROUP BY 1) c\n",
    "ON b.UserID = c.UserID\n",
    "ORDER BY 1,2) e\n",
    "ORDER BY 1,2) f\n",
    "GROUP BY 1\n",
    "ORDER BY 1;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "* ##### From the output, we can see retention rate of Taobao is quite low, no matter the first_day retention rate or the seventh-day retention rate.\n",
    "* ##### Because of the limitation of time span of raw data, the number of retention rate is decreasing gradually from11/27/2017."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 5.6.Repurchase Number"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "3 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>buy_times</th>\n",
       "        <th>User_number</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>19926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>23</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, 19926), (2, 542), (3, 23)]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT buy_times,COUNT(buy_times) User_number\n",
    "FROM\n",
    "   (SELECT UserID,COUNT(UserID) AS buy_times\n",
    "    FROM User_purchase_history\n",
    "    GROUP BY UserID) a\n",
    "GROUP BY buy_times\n",
    "ORDER BY buy_times\n",
    "LIMIT 10;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "<img src=\"repurchase_number.png\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "* ##### Almost all users just bought once on Taobao, and users only shop at Taobao for up to 3 times during this period."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 5.7. RFM Model\n",
    "#### Using RFM model to rate users based on their purchase behavior and divide users into different groups."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "#### RFM is a method used for analyzing customer value.\n",
    "#### RFM stands for the three dimensions: \n",
    " * #### Recency – How recently did the customer purchase?\n",
    " * #### Frequency – How often do they purchase?\n",
    " * #### Monetary Value – How much do they spend?\n",
    "\n",
    "#### Because the data source does not contain monetary value, we score customer value based on the R and F."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### First step: Creating table RFM, which contains UserID, the rank of recent purchasing, the rank of frequency of purchasing and UserValue."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Here, the last day of the period is December 3, and customers shopping that day means they purchased recently. The later they purchased, the higher recency. And we set the number of a user purchasing as the frequency. The more they purchased, the higher frequency. So, when the rank of recency or frequency is greater than a half of 20491, it returns 0; if not, 1. By the way, 20491 is the number of rows, that is, the number of users.\n",
    "\n",
    "##### Then we use ‘concat’ function to combine the two values, finally we get the uservalue."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "20491 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "CREATE TABLE RFM(\n",
    "SELECT R.UserID,F.Frequency,R.RecentRank,F.FreqRank,\n",
    "CONCAT(CASE WHEN RecentRank<=(20491)/2 THEN '0' \n",
    "            ELSE '1' END ,\n",
    "       CASE WHEN FreqRank<=(20491)/2 THEN '0'\n",
    "            ELSE '1' END) \n",
    "            AS UserValue\n",
    "FROM \n",
    "(SELECT a.*,(@rank:=@rank+1) as RecentRank\n",
    "FROM \n",
    "((SELECT UserID,DATEDIFF('2017-12-04',MAX(datentime)) AS Recent\n",
    "FROM User_purchase_history\n",
    "GROUP BY UserID\n",
    "ORDER BY Recent) AS a ,(SELECT @rank:=0) AS b )) AS R,\n",
    "(SELECT a.*,@rank1:=@rank1+1 AS FreqRank\n",
    "FROM \n",
    "((SELECT UserID,COUNT(*) AS Frequency\n",
    "FROM User_purchase_history\n",
    "GROUP BY UserID\n",
    "ORDER BY Frequency DESC) AS a ,(SELECT @rank1:=0) AS b)) AS F \n",
    "WHERE R.UserID=F.UserID)\n",
    ";"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Second step: Adding the corresponding label to each UserValue"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Valuable customers have purchased multiple times but have not purchased items recently. Important customers have purchased multiple times and have recently purchased items. Retained customers have fewer purchases but have not purchased items recently. Potential customers have purchased fewer times but have recently purchased items. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>UserID</th>\n",
       "        <th>Frequency</th>\n",
       "        <th>RecentRank</th>\n",
       "        <th>FreqRank</th>\n",
       "        <th>UserValue</th>\n",
       "        <th>Label</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>310413</td>\n",
       "        <td>1</td>\n",
       "        <td>1.0</td>\n",
       "        <td>17641.0</td>\n",
       "        <td>01</td>\n",
       "        <td>Retained customers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>729803</td>\n",
       "        <td>1</td>\n",
       "        <td>2.0</td>\n",
       "        <td>4295.0</td>\n",
       "        <td>00</td>\n",
       "        <td>Valued customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>671474</td>\n",
       "        <td>1</td>\n",
       "        <td>3.0</td>\n",
       "        <td>20266.0</td>\n",
       "        <td>01</td>\n",
       "        <td>Retained customers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>665313</td>\n",
       "        <td>1</td>\n",
       "        <td>4.0</td>\n",
       "        <td>19598.0</td>\n",
       "        <td>01</td>\n",
       "        <td>Retained customers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>546471</td>\n",
       "        <td>1</td>\n",
       "        <td>5.0</td>\n",
       "        <td>8859.0</td>\n",
       "        <td>00</td>\n",
       "        <td>Valued customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>790596</td>\n",
       "        <td>1</td>\n",
       "        <td>6.0</td>\n",
       "        <td>1189.0</td>\n",
       "        <td>00</td>\n",
       "        <td>Valued customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>979745</td>\n",
       "        <td>1</td>\n",
       "        <td>7.0</td>\n",
       "        <td>4908.0</td>\n",
       "        <td>00</td>\n",
       "        <td>Valued customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>500640</td>\n",
       "        <td>1</td>\n",
       "        <td>8.0</td>\n",
       "        <td>18639.0</td>\n",
       "        <td>01</td>\n",
       "        <td>Retained customers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>837917</td>\n",
       "        <td>1</td>\n",
       "        <td>9.0</td>\n",
       "        <td>19889.0</td>\n",
       "        <td>01</td>\n",
       "        <td>Retained customers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>705129</td>\n",
       "        <td>1</td>\n",
       "        <td>10.0</td>\n",
       "        <td>8878.0</td>\n",
       "        <td>00</td>\n",
       "        <td>Valued customer</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(310413, 1, 1.0, 17641.0, '01', 'Retained customers'),\n",
       " (729803, 1, 2.0, 4295.0, '00', 'Valued customer'),\n",
       " (671474, 1, 3.0, 20266.0, '01', 'Retained customers'),\n",
       " (665313, 1, 4.0, 19598.0, '01', 'Retained customers'),\n",
       " (546471, 1, 5.0, 8859.0, '00', 'Valued customer'),\n",
       " (790596, 1, 6.0, 1189.0, '00', 'Valued customer'),\n",
       " (979745, 1, 7.0, 4908.0, '00', 'Valued customer'),\n",
       " (500640, 1, 8.0, 18639.0, '01', 'Retained customers'),\n",
       " (837917, 1, 9.0, 19889.0, '01', 'Retained customers'),\n",
       " (705129, 1, 10.0, 8878.0, '00', 'Valued customer')]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT *,\n",
    "(CASE\n",
    "WHEN UserValue='00' THEN 'Valued customer'\n",
    "WHEN UserValue='10' THEN 'Important customers'  \n",
    "WHEN UserValue='01' THEN 'Retained customers'\n",
    "WHEN UserValue='11' THEN 'Potential customers'\n",
    "END) AS Label\n",
    "FROM RFM\n",
    "LIMIT 10\n",
    ";"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### So, we can divide customers into 4 groups.\n",
    "* #### Valued customers purchased many times, but not recently.\n",
    "* #### Important customers purchased many times, including recently.\n",
    "* #### Retained customers purchased few times and not recently.\n",
    "* #### Potential customers purchased few times, but recently."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### 1. Users with high R and F scores are the most important users in the system, and they need to be focused on the recommendation activities.\n",
    "##### 2. Users with low R and low F are not sticky and have a short consumption time. The operation needs to focus on these users.\n",
    "##### 3. Users with low R and low F can be called back through discounts, promotions, redemption and other activities.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"Differentcustomers.png\">\n",
    "\n",
    "* #### The number of important customers is the same as the number of retained customers,while they both less than the number of potential customers and the number of valued customers.\n",
    "\n",
    "* #### This may because we sample the dataset into a smaller one and we do not have data about monetary value, so we could not divide them more accurately."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 5.8. Item Sales Analysis\n",
    "#### In this section, we try to optimize item sales by finding the item and item category with the highest purchase rate, that is, the most popular item and item category."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>ItemID</th>\n",
       "        <th>ItemBuytimes</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3122135</td>\n",
       "        <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>257772</td>\n",
       "        <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3189426</td>\n",
       "        <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4219087</td>\n",
       "        <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>222342</td>\n",
       "        <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2955846</td>\n",
       "        <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4499425</td>\n",
       "        <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3006495</td>\n",
       "        <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2964774</td>\n",
       "        <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5122568</td>\n",
       "        <td>7</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(3122135, 12),\n",
       " (257772, 11),\n",
       " (3189426, 9),\n",
       " (4219087, 9),\n",
       " (222342, 8),\n",
       " (2955846, 8),\n",
       " (4499425, 8),\n",
       " (3006495, 8),\n",
       " (2964774, 7),\n",
       " (5122568, 7)]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT ItemID, COUNT(*) AS ItemBuytimes\n",
    "FROM\n",
    "User_purchase_history\n",
    "GROUP BY ItemID\n",
    "ORDER BY ItemBuytimes DESC\n",
    "LIMIT 10;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"itemsalesranking.png\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "scrolled": true,
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "11 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>ItemBuytimes</th>\n",
       "        <th>ItemTypecount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1</td>\n",
       "        <td>17287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2</td>\n",
       "        <td>1219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3</td>\n",
       "        <td>225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4</td>\n",
       "        <td>84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>5</td>\n",
       "        <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>6</td>\n",
       "        <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>7</td>\n",
       "        <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>8</td>\n",
       "        <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>9</td>\n",
       "        <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>11</td>\n",
       "        <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>12</td>\n",
       "        <td>1</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(1, 17287),\n",
       " (2, 1219),\n",
       " (3, 225),\n",
       " (4, 84),\n",
       " (5, 34),\n",
       " (6, 12),\n",
       " (7, 4),\n",
       " (8, 4),\n",
       " (9, 2),\n",
       " (11, 1),\n",
       " (12, 1)]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT ItemBuytimes, COUNT(*) AS ItemTypecount\n",
    "FROM\n",
    "(SELECT COUNT(UserID) AS ItemBuytimes\n",
    "FROM User_purchase_history\n",
    "GROUP BY ItemID) AS ItemBuypool\n",
    "GROUP BY ItemBuytimes\n",
    "ORDER BY ItemBuytimes ASC\n",
    ";"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "<img src=\"buytimes.png\">\n",
    "\n",
    "* ##### There are 17287 types of items purchased only once, and there are 1219 items purchased two times. \n",
    "* ##### Most items are purchased only once during this period, indicating that the \"explosion\" is still not formed and the item sales are relatively low."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### So what about the sales rankings of item categories?\n",
    "#### To analyze the problem, we left join table User_purchase_history and Item_category, and then group by CategoryID."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>UserID</th>\n",
       "        <th>ItemID</th>\n",
       "        <th>CategoryID</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>879265</td>\n",
       "        <td>1203012</td>\n",
       "        <td>4163659</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>518295</td>\n",
       "        <td>1493764</td>\n",
       "        <td>4159072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>815988</td>\n",
       "        <td>3330337</td>\n",
       "        <td>4756105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>317490</td>\n",
       "        <td>3330337</td>\n",
       "        <td>4756105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>877663</td>\n",
       "        <td>3330337</td>\n",
       "        <td>4756105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>932142</td>\n",
       "        <td>3330337</td>\n",
       "        <td>4756105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>331107</td>\n",
       "        <td>837113</td>\n",
       "        <td>245312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>905497</td>\n",
       "        <td>580562</td>\n",
       "        <td>2355072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>618133</td>\n",
       "        <td>2871705</td>\n",
       "        <td>2735466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4456</td>\n",
       "        <td>3000506</td>\n",
       "        <td>4643350</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(879265, 1203012, 4163659),\n",
       " (518295, 1493764, 4159072),\n",
       " (815988, 3330337, 4756105),\n",
       " (317490, 3330337, 4756105),\n",
       " (877663, 3330337, 4756105),\n",
       " (932142, 3330337, 4756105),\n",
       " (331107, 837113, 245312),\n",
       " (905497, 580562, 2355072),\n",
       " (618133, 2871705, 2735466),\n",
       " (4456, 3000506, 4643350)]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT UserID,User_purchase_history.ItemID,CategoryID\n",
    "FROM User_purchase_history  \n",
    "LEFT JOIN Item_category\n",
    "ON User_purchase_history.ItemID=Item_category.ItemID\n",
    "LIMIT 10;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " * mysql+pymysql://root:***@fe512_mysql/fe512db\n",
      "10 rows affected.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "    <tr>\n",
       "        <th>CategoryID</th>\n",
       "        <th>CateBuytimes</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2735466</td>\n",
       "        <td>8310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4756105</td>\n",
       "        <td>7181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1464116</td>\n",
       "        <td>4675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4801426</td>\n",
       "        <td>4509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>3607361</td>\n",
       "        <td>4101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>982926</td>\n",
       "        <td>3629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>4145813</td>\n",
       "        <td>2781</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>2355072</td>\n",
       "        <td>2493</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>1320293</td>\n",
       "        <td>2175</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "        <td>903809</td>\n",
       "        <td>2142</td>\n",
       "    </tr>\n",
       "</table>"
      ],
      "text/plain": [
       "[(2735466, 8310),\n",
       " (4756105, 7181),\n",
       " (1464116, 4675),\n",
       " (4801426, 4509),\n",
       " (3607361, 4101),\n",
       " (982926, 3629),\n",
       " (4145813, 2781),\n",
       " (2355072, 2493),\n",
       " (1320293, 2175),\n",
       " (903809, 2142)]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%sql\n",
    "SELECT CategoryID,COUNT(UserID) AS CateBuytimes\n",
    "FROM (SELECT UserID,User_purchase_history.ItemID,CategoryID\n",
    "FROM User_purchase_history  \n",
    "LEFT JOIN Item_category\n",
    "ON User_purchase_history.ItemID=Item_category.ItemID) a\n",
    "GROUP BY CategoryID\n",
    "ORDER BY CateBuytimes DESC\n",
    "LIMIT 10;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "<img src=\"ItemCategorySalesRanking.png\">\n",
    "\n",
    "* ##### The item category whose ID is '2735466' is the most popular. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 6.Conclusion and Recommendation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "### 1）Acquisition\n",
    "#### December 2 and 3, 2017 is weekend, and the number of clicks increased steeply, it is possible that Taobao held a promotional event at that time. At different times of the day, clicks rose steadily from 10 o'clock to reach their peak by 13 o'clock, then gradually decreased, and at 20 o'clock began to rise, with 24 o'clock to reach the second peak. \n",
    "#### Interestingly, people are keen on shopping before bed. So, if a shopping platform plans to carry out activities, the best period is noon or late at night, such as holding a special discount at lunch time or holding a snap at midnight."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "\n",
    "### 2）Activation\n",
    "#### User behavior includes clicking, adding item in the shopping cart, favoring, and buying. While ‘pv’ for 81.9% of total behavior, ‘cart’ for 9.6%, ‘fav’ but not buying 4.9%, and finally actually ‘buy’ down to 3%.\n",
    "#### So, we could conclude that some items have been successful to arouse the interest of users, but for some reason the user hesitated on shopping, so that potential ‘buy’ users diverted to the ‘fav’. According to the data analysis results, the suggestions to improve the conversion rate are that: \n",
    "\n",
    "* #### optimizing the screening function of the e-commerce platform, increasing the accuracy of keywords, making it easier for users to find the right item;\n",
    "* #### providing customers with similar item comparison functions, so that users do not need to return multiple times search results;\n",
    "* #### streamline the next single step and provide a one-click order service, such as including only clicks-buy-pay three link, shorten the purchase process, improve the user experience."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### 3）Retention\n",
    "#### Keeping users in the habit of using specified e-commerce platforms is the key to increasing retention rates, and the options available are: \n",
    "\n",
    "* #### Daily Online check-in points, daily \"tasks\", including adding items to shopping cart, adding favorite items and shopping, continuous check-in or completion of tasks a week, a month can automatically collect points, to the middle or end of the year can be exchanged for shopping vouchers;\n",
    "* #### introduce VIP service to customers whose annual purchase quantity and amount reach the specified number. Get a 95% discount when they buy, and a higher-level discount one year after they buy. These methods can improve the retention rate of high-value users and cultivate their loyalty to the platform."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### 4）Revenue\n",
    "\n",
    "#### We can determine the valued users through the repurchase rate; through analysis to find out the valued users ' purchase preferences, items and item categories to develop personalized item recommendations (\"Guess you Like\"), so as to improve the user experience and e-commerce platform sales.\n",
    "#### Possible appropriate improvement options are: \n",
    "\n",
    "* #### for the previously identified valued users to provide personalized product recommendations, such as the most concerned about the product categories and types, after the new regular push to the user;\n",
    "* #### for the repurchase rate, can be launched within 3 months of the repurchase preferential activities, so that customers maintain the frequency of purchase.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## 7.Shortage and Future Work"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "* ### Since the time span is too short, just 1 month, we could not analyze the user behavior in a long term.\n",
    "* ### Additionally, there is no data about monetary value, so we cannot divide users in groups accurately.\n",
    "* ### As we mentioned, the dataset is quite large, so we cannot analyze based on the initial whole dataset.\n",
    "### So, the future work is to analyze user behavior in several months even 1 year, to find order amount to improve RFM model and to analyze the whole dataset on AWS or other big data platforms."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 8. References"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* https://www.jianshu.com/p/072e5b981040\n",
    "* https://blog.treasuredata.com/blog/2016/07/22/rolling-retention-done-right-in-sql/\n",
    "* https://zhuanlan.zhihu.com/p/59091803"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "幻灯片",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
